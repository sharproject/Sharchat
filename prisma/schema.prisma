// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String
  password  String
  email     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
  guilds    Guild[]
  Message   Message[]
  Member    Member[]
}

model Guild {
  id             String    @id @default(uuid())
  createAt       DateTime  @default(now())
  updateAt       DateTime  @updatedAt
  name           String
  description    String
  owner          User      @relation(fields: [userId], references: [id])
  members        Member[]
  channels       Channel[]
  roles          Role[]
  everyoneRoleId String
  userId         String
}

model Member {
  id       String    @id @default(uuid())
  joinedAt DateTime  @default(now())
  updateAt DateTime  @updatedAt()
  user     User      @relation(fields: [userId], references: [id])
  // guild Guild[]
  // Role 
  isOwner  Boolean
  removed  Boolean
  Guild    Guild     @relation(fields: [guildId], references: [id])
  guildId  String
  Message  Message[]
  Role     Role[]
  userId   String
}

model Channel {
  id          String    @id @default(uuid())
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt()
  name        String
  description String    @default("")
  guild       Guild[]
  message     Message[]
}

model Message {
  id        String   @id @default(uuid())
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt()
  User      User     @relation(fields: [userId], references: [id])
  Channel   Channel  @relation(fields: [channelId], references: [id])
  member    Member   @relation(fields: [memberId], references: [id])
  userId    String
  channelId String
  memberId  String
}

model Role {
  RoleName  String
  id        String   @id @default(uuid())
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt()
  guild     Guild    @relation(fields: [guildId], references: [id])
  hide      Boolean  @default(false)
  position  Int      @default(1)
  member    Member[]
  color     String   @default("#fffff")
  hideInNav Boolean  @default(false)

  guildId String
}
